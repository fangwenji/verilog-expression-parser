Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> term MUL term
Rule 2     expression -> term DIV term
Rule 3     expression -> term ADD term
Rule 4     expression -> term SUB term
Rule 5     expression -> term OR term
Rule 6     expression -> term AND term
Rule 7     expression -> term BOR term
Rule 8     expression -> term BAND term
Rule 9     expression -> term
Rule 10    term -> factor MUL factor
Rule 11    term -> factor DIV factor
Rule 12    term -> factor ADD factor
Rule 13    term -> factor SUB factor
Rule 14    term -> factor OR factor
Rule 15    term -> factor AND factor
Rule 16    term -> factor BOR factor
Rule 17    term -> factor BAND factor
Rule 18    term -> factor
Rule 19    factor -> NOT factor
Rule 20    factor -> BNOT factor
Rule 21    factor -> LPAREN expression RPAREN
Rule 22    factor -> ID
Rule 23    factor -> const_expression
Rule 24    const_expression -> intnumber
Rule 25    intnumber -> INTNUM_BIN
Rule 26    intnumber -> INTNUM_OCT
Rule 27    intnumber -> INTNUM_DEC
Rule 28    intnumber -> INTNUM_HEX
Rule 29    intnumber -> SIGNED_INTNUM_BIN
Rule 30    intnumber -> SIGNED_INTNUM_OCT
Rule 31    intnumber -> SIGNED_INTNUM_DEC
Rule 32    intnumber -> SIGNED_INTNUM_HEX

Terminals, with rules where they appear

ADD                  : 3 12
AND                  : 6 15
BAND                 : 8 17
BNOT                 : 20
BOR                  : 7 16
DIV                  : 2 11
ID                   : 22
INTNUM_BIN           : 25
INTNUM_DEC           : 27
INTNUM_HEX           : 28
INTNUM_OCT           : 26
LPAREN               : 21
MUL                  : 1 10
NOT                  : 19
OR                   : 5 14
RPAREN               : 21
SIGNED_INTNUM_BIN    : 29
SIGNED_INTNUM_DEC    : 31
SIGNED_INTNUM_HEX    : 32
SIGNED_INTNUM_OCT    : 30
SUB                  : 4 13
error                : 

Nonterminals, with rules where they appear

const_expression     : 23
expression           : 21 0
factor               : 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 19 20
intnumber            : 24
term                 : 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . term MUL term
    (2) expression -> . term DIV term
    (3) expression -> . term ADD term
    (4) expression -> . term SUB term
    (5) expression -> . term OR term
    (6) expression -> . term AND term
    (7) expression -> . term BOR term
    (8) expression -> . term BAND term
    (9) expression -> . term
    (10) term -> . factor MUL factor
    (11) term -> . factor DIV factor
    (12) term -> . factor ADD factor
    (13) term -> . factor SUB factor
    (14) term -> . factor OR factor
    (15) term -> . factor AND factor
    (16) term -> . factor BOR factor
    (17) term -> . factor BAND factor
    (18) term -> . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    expression                     shift and go to state 1
    term                           shift and go to state 2
    factor                         shift and go to state 3
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 1

    (0) S' -> expression .



state 2

    (1) expression -> term . MUL term
    (2) expression -> term . DIV term
    (3) expression -> term . ADD term
    (4) expression -> term . SUB term
    (5) expression -> term . OR term
    (6) expression -> term . AND term
    (7) expression -> term . BOR term
    (8) expression -> term . BAND term
    (9) expression -> term .

    MUL             shift and go to state 18
    DIV             shift and go to state 19
    ADD             shift and go to state 20
    SUB             shift and go to state 21
    OR              shift and go to state 22
    AND             shift and go to state 23
    BOR             shift and go to state 24
    BAND            shift and go to state 25
    $end            reduce using rule 9 (expression -> term .)
    RPAREN          reduce using rule 9 (expression -> term .)


state 3

    (10) term -> factor . MUL factor
    (11) term -> factor . DIV factor
    (12) term -> factor . ADD factor
    (13) term -> factor . SUB factor
    (14) term -> factor . OR factor
    (15) term -> factor . AND factor
    (16) term -> factor . BOR factor
    (17) term -> factor . BAND factor
    (18) term -> factor .

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for BOR resolved as shift
  ! shift/reduce conflict for BAND resolved as shift
    MUL             shift and go to state 26
    DIV             shift and go to state 27
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    OR              shift and go to state 30
    AND             shift and go to state 31
    BOR             shift and go to state 32
    BAND            shift and go to state 33
    $end            reduce using rule 18 (term -> factor .)
    RPAREN          reduce using rule 18 (term -> factor .)

  ! MUL             [ reduce using rule 18 (term -> factor .) ]
  ! DIV             [ reduce using rule 18 (term -> factor .) ]
  ! ADD             [ reduce using rule 18 (term -> factor .) ]
  ! SUB             [ reduce using rule 18 (term -> factor .) ]
  ! OR              [ reduce using rule 18 (term -> factor .) ]
  ! AND             [ reduce using rule 18 (term -> factor .) ]
  ! BOR             [ reduce using rule 18 (term -> factor .) ]
  ! BAND            [ reduce using rule 18 (term -> factor .) ]


state 4

    (19) factor -> NOT . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    factor                         shift and go to state 34
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 5

    (20) factor -> BNOT . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    factor                         shift and go to state 35
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 6

    (21) factor -> LPAREN . expression RPAREN
    (1) expression -> . term MUL term
    (2) expression -> . term DIV term
    (3) expression -> . term ADD term
    (4) expression -> . term SUB term
    (5) expression -> . term OR term
    (6) expression -> . term AND term
    (7) expression -> . term BOR term
    (8) expression -> . term BAND term
    (9) expression -> . term
    (10) term -> . factor MUL factor
    (11) term -> . factor DIV factor
    (12) term -> . factor ADD factor
    (13) term -> . factor SUB factor
    (14) term -> . factor OR factor
    (15) term -> . factor AND factor
    (16) term -> . factor BOR factor
    (17) term -> . factor BAND factor
    (18) term -> . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    expression                     shift and go to state 36
    term                           shift and go to state 2
    factor                         shift and go to state 3
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 7

    (22) factor -> ID .

    MUL             reduce using rule 22 (factor -> ID .)
    DIV             reduce using rule 22 (factor -> ID .)
    ADD             reduce using rule 22 (factor -> ID .)
    SUB             reduce using rule 22 (factor -> ID .)
    OR              reduce using rule 22 (factor -> ID .)
    AND             reduce using rule 22 (factor -> ID .)
    BOR             reduce using rule 22 (factor -> ID .)
    BAND            reduce using rule 22 (factor -> ID .)
    $end            reduce using rule 22 (factor -> ID .)
    RPAREN          reduce using rule 22 (factor -> ID .)


state 8

    (23) factor -> const_expression .

    MUL             reduce using rule 23 (factor -> const_expression .)
    DIV             reduce using rule 23 (factor -> const_expression .)
    ADD             reduce using rule 23 (factor -> const_expression .)
    SUB             reduce using rule 23 (factor -> const_expression .)
    OR              reduce using rule 23 (factor -> const_expression .)
    AND             reduce using rule 23 (factor -> const_expression .)
    BOR             reduce using rule 23 (factor -> const_expression .)
    BAND            reduce using rule 23 (factor -> const_expression .)
    $end            reduce using rule 23 (factor -> const_expression .)
    RPAREN          reduce using rule 23 (factor -> const_expression .)


state 9

    (24) const_expression -> intnumber .

    MUL             reduce using rule 24 (const_expression -> intnumber .)
    DIV             reduce using rule 24 (const_expression -> intnumber .)
    ADD             reduce using rule 24 (const_expression -> intnumber .)
    SUB             reduce using rule 24 (const_expression -> intnumber .)
    OR              reduce using rule 24 (const_expression -> intnumber .)
    AND             reduce using rule 24 (const_expression -> intnumber .)
    BOR             reduce using rule 24 (const_expression -> intnumber .)
    BAND            reduce using rule 24 (const_expression -> intnumber .)
    $end            reduce using rule 24 (const_expression -> intnumber .)
    RPAREN          reduce using rule 24 (const_expression -> intnumber .)


state 10

    (25) intnumber -> INTNUM_BIN .

    MUL             reduce using rule 25 (intnumber -> INTNUM_BIN .)
    DIV             reduce using rule 25 (intnumber -> INTNUM_BIN .)
    ADD             reduce using rule 25 (intnumber -> INTNUM_BIN .)
    SUB             reduce using rule 25 (intnumber -> INTNUM_BIN .)
    OR              reduce using rule 25 (intnumber -> INTNUM_BIN .)
    AND             reduce using rule 25 (intnumber -> INTNUM_BIN .)
    BOR             reduce using rule 25 (intnumber -> INTNUM_BIN .)
    BAND            reduce using rule 25 (intnumber -> INTNUM_BIN .)
    $end            reduce using rule 25 (intnumber -> INTNUM_BIN .)
    RPAREN          reduce using rule 25 (intnumber -> INTNUM_BIN .)


state 11

    (26) intnumber -> INTNUM_OCT .

    MUL             reduce using rule 26 (intnumber -> INTNUM_OCT .)
    DIV             reduce using rule 26 (intnumber -> INTNUM_OCT .)
    ADD             reduce using rule 26 (intnumber -> INTNUM_OCT .)
    SUB             reduce using rule 26 (intnumber -> INTNUM_OCT .)
    OR              reduce using rule 26 (intnumber -> INTNUM_OCT .)
    AND             reduce using rule 26 (intnumber -> INTNUM_OCT .)
    BOR             reduce using rule 26 (intnumber -> INTNUM_OCT .)
    BAND            reduce using rule 26 (intnumber -> INTNUM_OCT .)
    $end            reduce using rule 26 (intnumber -> INTNUM_OCT .)
    RPAREN          reduce using rule 26 (intnumber -> INTNUM_OCT .)


state 12

    (27) intnumber -> INTNUM_DEC .

    MUL             reduce using rule 27 (intnumber -> INTNUM_DEC .)
    DIV             reduce using rule 27 (intnumber -> INTNUM_DEC .)
    ADD             reduce using rule 27 (intnumber -> INTNUM_DEC .)
    SUB             reduce using rule 27 (intnumber -> INTNUM_DEC .)
    OR              reduce using rule 27 (intnumber -> INTNUM_DEC .)
    AND             reduce using rule 27 (intnumber -> INTNUM_DEC .)
    BOR             reduce using rule 27 (intnumber -> INTNUM_DEC .)
    BAND            reduce using rule 27 (intnumber -> INTNUM_DEC .)
    $end            reduce using rule 27 (intnumber -> INTNUM_DEC .)
    RPAREN          reduce using rule 27 (intnumber -> INTNUM_DEC .)


state 13

    (28) intnumber -> INTNUM_HEX .

    MUL             reduce using rule 28 (intnumber -> INTNUM_HEX .)
    DIV             reduce using rule 28 (intnumber -> INTNUM_HEX .)
    ADD             reduce using rule 28 (intnumber -> INTNUM_HEX .)
    SUB             reduce using rule 28 (intnumber -> INTNUM_HEX .)
    OR              reduce using rule 28 (intnumber -> INTNUM_HEX .)
    AND             reduce using rule 28 (intnumber -> INTNUM_HEX .)
    BOR             reduce using rule 28 (intnumber -> INTNUM_HEX .)
    BAND            reduce using rule 28 (intnumber -> INTNUM_HEX .)
    $end            reduce using rule 28 (intnumber -> INTNUM_HEX .)
    RPAREN          reduce using rule 28 (intnumber -> INTNUM_HEX .)


state 14

    (29) intnumber -> SIGNED_INTNUM_BIN .

    MUL             reduce using rule 29 (intnumber -> SIGNED_INTNUM_BIN .)
    DIV             reduce using rule 29 (intnumber -> SIGNED_INTNUM_BIN .)
    ADD             reduce using rule 29 (intnumber -> SIGNED_INTNUM_BIN .)
    SUB             reduce using rule 29 (intnumber -> SIGNED_INTNUM_BIN .)
    OR              reduce using rule 29 (intnumber -> SIGNED_INTNUM_BIN .)
    AND             reduce using rule 29 (intnumber -> SIGNED_INTNUM_BIN .)
    BOR             reduce using rule 29 (intnumber -> SIGNED_INTNUM_BIN .)
    BAND            reduce using rule 29 (intnumber -> SIGNED_INTNUM_BIN .)
    $end            reduce using rule 29 (intnumber -> SIGNED_INTNUM_BIN .)
    RPAREN          reduce using rule 29 (intnumber -> SIGNED_INTNUM_BIN .)


state 15

    (30) intnumber -> SIGNED_INTNUM_OCT .

    MUL             reduce using rule 30 (intnumber -> SIGNED_INTNUM_OCT .)
    DIV             reduce using rule 30 (intnumber -> SIGNED_INTNUM_OCT .)
    ADD             reduce using rule 30 (intnumber -> SIGNED_INTNUM_OCT .)
    SUB             reduce using rule 30 (intnumber -> SIGNED_INTNUM_OCT .)
    OR              reduce using rule 30 (intnumber -> SIGNED_INTNUM_OCT .)
    AND             reduce using rule 30 (intnumber -> SIGNED_INTNUM_OCT .)
    BOR             reduce using rule 30 (intnumber -> SIGNED_INTNUM_OCT .)
    BAND            reduce using rule 30 (intnumber -> SIGNED_INTNUM_OCT .)
    $end            reduce using rule 30 (intnumber -> SIGNED_INTNUM_OCT .)
    RPAREN          reduce using rule 30 (intnumber -> SIGNED_INTNUM_OCT .)


state 16

    (31) intnumber -> SIGNED_INTNUM_DEC .

    MUL             reduce using rule 31 (intnumber -> SIGNED_INTNUM_DEC .)
    DIV             reduce using rule 31 (intnumber -> SIGNED_INTNUM_DEC .)
    ADD             reduce using rule 31 (intnumber -> SIGNED_INTNUM_DEC .)
    SUB             reduce using rule 31 (intnumber -> SIGNED_INTNUM_DEC .)
    OR              reduce using rule 31 (intnumber -> SIGNED_INTNUM_DEC .)
    AND             reduce using rule 31 (intnumber -> SIGNED_INTNUM_DEC .)
    BOR             reduce using rule 31 (intnumber -> SIGNED_INTNUM_DEC .)
    BAND            reduce using rule 31 (intnumber -> SIGNED_INTNUM_DEC .)
    $end            reduce using rule 31 (intnumber -> SIGNED_INTNUM_DEC .)
    RPAREN          reduce using rule 31 (intnumber -> SIGNED_INTNUM_DEC .)


state 17

    (32) intnumber -> SIGNED_INTNUM_HEX .

    MUL             reduce using rule 32 (intnumber -> SIGNED_INTNUM_HEX .)
    DIV             reduce using rule 32 (intnumber -> SIGNED_INTNUM_HEX .)
    ADD             reduce using rule 32 (intnumber -> SIGNED_INTNUM_HEX .)
    SUB             reduce using rule 32 (intnumber -> SIGNED_INTNUM_HEX .)
    OR              reduce using rule 32 (intnumber -> SIGNED_INTNUM_HEX .)
    AND             reduce using rule 32 (intnumber -> SIGNED_INTNUM_HEX .)
    BOR             reduce using rule 32 (intnumber -> SIGNED_INTNUM_HEX .)
    BAND            reduce using rule 32 (intnumber -> SIGNED_INTNUM_HEX .)
    $end            reduce using rule 32 (intnumber -> SIGNED_INTNUM_HEX .)
    RPAREN          reduce using rule 32 (intnumber -> SIGNED_INTNUM_HEX .)


state 18

    (1) expression -> term MUL . term
    (10) term -> . factor MUL factor
    (11) term -> . factor DIV factor
    (12) term -> . factor ADD factor
    (13) term -> . factor SUB factor
    (14) term -> . factor OR factor
    (15) term -> . factor AND factor
    (16) term -> . factor BOR factor
    (17) term -> . factor BAND factor
    (18) term -> . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    term                           shift and go to state 37
    factor                         shift and go to state 3
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 19

    (2) expression -> term DIV . term
    (10) term -> . factor MUL factor
    (11) term -> . factor DIV factor
    (12) term -> . factor ADD factor
    (13) term -> . factor SUB factor
    (14) term -> . factor OR factor
    (15) term -> . factor AND factor
    (16) term -> . factor BOR factor
    (17) term -> . factor BAND factor
    (18) term -> . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    term                           shift and go to state 38
    factor                         shift and go to state 3
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 20

    (3) expression -> term ADD . term
    (10) term -> . factor MUL factor
    (11) term -> . factor DIV factor
    (12) term -> . factor ADD factor
    (13) term -> . factor SUB factor
    (14) term -> . factor OR factor
    (15) term -> . factor AND factor
    (16) term -> . factor BOR factor
    (17) term -> . factor BAND factor
    (18) term -> . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    term                           shift and go to state 39
    factor                         shift and go to state 3
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 21

    (4) expression -> term SUB . term
    (10) term -> . factor MUL factor
    (11) term -> . factor DIV factor
    (12) term -> . factor ADD factor
    (13) term -> . factor SUB factor
    (14) term -> . factor OR factor
    (15) term -> . factor AND factor
    (16) term -> . factor BOR factor
    (17) term -> . factor BAND factor
    (18) term -> . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    term                           shift and go to state 40
    factor                         shift and go to state 3
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 22

    (5) expression -> term OR . term
    (10) term -> . factor MUL factor
    (11) term -> . factor DIV factor
    (12) term -> . factor ADD factor
    (13) term -> . factor SUB factor
    (14) term -> . factor OR factor
    (15) term -> . factor AND factor
    (16) term -> . factor BOR factor
    (17) term -> . factor BAND factor
    (18) term -> . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    term                           shift and go to state 41
    factor                         shift and go to state 3
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 23

    (6) expression -> term AND . term
    (10) term -> . factor MUL factor
    (11) term -> . factor DIV factor
    (12) term -> . factor ADD factor
    (13) term -> . factor SUB factor
    (14) term -> . factor OR factor
    (15) term -> . factor AND factor
    (16) term -> . factor BOR factor
    (17) term -> . factor BAND factor
    (18) term -> . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    term                           shift and go to state 42
    factor                         shift and go to state 3
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 24

    (7) expression -> term BOR . term
    (10) term -> . factor MUL factor
    (11) term -> . factor DIV factor
    (12) term -> . factor ADD factor
    (13) term -> . factor SUB factor
    (14) term -> . factor OR factor
    (15) term -> . factor AND factor
    (16) term -> . factor BOR factor
    (17) term -> . factor BAND factor
    (18) term -> . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    term                           shift and go to state 43
    factor                         shift and go to state 3
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 25

    (8) expression -> term BAND . term
    (10) term -> . factor MUL factor
    (11) term -> . factor DIV factor
    (12) term -> . factor ADD factor
    (13) term -> . factor SUB factor
    (14) term -> . factor OR factor
    (15) term -> . factor AND factor
    (16) term -> . factor BOR factor
    (17) term -> . factor BAND factor
    (18) term -> . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    term                           shift and go to state 44
    factor                         shift and go to state 3
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 26

    (10) term -> factor MUL . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    factor                         shift and go to state 45
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 27

    (11) term -> factor DIV . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    factor                         shift and go to state 46
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 28

    (12) term -> factor ADD . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    factor                         shift and go to state 47
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 29

    (13) term -> factor SUB . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    factor                         shift and go to state 48
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 30

    (14) term -> factor OR . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    factor                         shift and go to state 49
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 31

    (15) term -> factor AND . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    factor                         shift and go to state 50
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 32

    (16) term -> factor BOR . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    factor                         shift and go to state 51
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 33

    (17) term -> factor BAND . factor
    (19) factor -> . NOT factor
    (20) factor -> . BNOT factor
    (21) factor -> . LPAREN expression RPAREN
    (22) factor -> . ID
    (23) factor -> . const_expression
    (24) const_expression -> . intnumber
    (25) intnumber -> . INTNUM_BIN
    (26) intnumber -> . INTNUM_OCT
    (27) intnumber -> . INTNUM_DEC
    (28) intnumber -> . INTNUM_HEX
    (29) intnumber -> . SIGNED_INTNUM_BIN
    (30) intnumber -> . SIGNED_INTNUM_OCT
    (31) intnumber -> . SIGNED_INTNUM_DEC
    (32) intnumber -> . SIGNED_INTNUM_HEX

    NOT             shift and go to state 4
    BNOT            shift and go to state 5
    LPAREN          shift and go to state 6
    ID              shift and go to state 7
    INTNUM_BIN      shift and go to state 10
    INTNUM_OCT      shift and go to state 11
    INTNUM_DEC      shift and go to state 12
    INTNUM_HEX      shift and go to state 13
    SIGNED_INTNUM_BIN shift and go to state 14
    SIGNED_INTNUM_OCT shift and go to state 15
    SIGNED_INTNUM_DEC shift and go to state 16
    SIGNED_INTNUM_HEX shift and go to state 17

    factor                         shift and go to state 52
    const_expression               shift and go to state 8
    intnumber                      shift and go to state 9

state 34

    (19) factor -> NOT factor .

    MUL             reduce using rule 19 (factor -> NOT factor .)
    DIV             reduce using rule 19 (factor -> NOT factor .)
    ADD             reduce using rule 19 (factor -> NOT factor .)
    SUB             reduce using rule 19 (factor -> NOT factor .)
    OR              reduce using rule 19 (factor -> NOT factor .)
    AND             reduce using rule 19 (factor -> NOT factor .)
    BOR             reduce using rule 19 (factor -> NOT factor .)
    BAND            reduce using rule 19 (factor -> NOT factor .)
    $end            reduce using rule 19 (factor -> NOT factor .)
    RPAREN          reduce using rule 19 (factor -> NOT factor .)


state 35

    (20) factor -> BNOT factor .

    MUL             reduce using rule 20 (factor -> BNOT factor .)
    DIV             reduce using rule 20 (factor -> BNOT factor .)
    ADD             reduce using rule 20 (factor -> BNOT factor .)
    SUB             reduce using rule 20 (factor -> BNOT factor .)
    OR              reduce using rule 20 (factor -> BNOT factor .)
    AND             reduce using rule 20 (factor -> BNOT factor .)
    BOR             reduce using rule 20 (factor -> BNOT factor .)
    BAND            reduce using rule 20 (factor -> BNOT factor .)
    $end            reduce using rule 20 (factor -> BNOT factor .)
    RPAREN          reduce using rule 20 (factor -> BNOT factor .)


state 36

    (21) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 53


state 37

    (1) expression -> term MUL term .

    $end            reduce using rule 1 (expression -> term MUL term .)
    RPAREN          reduce using rule 1 (expression -> term MUL term .)


state 38

    (2) expression -> term DIV term .

    $end            reduce using rule 2 (expression -> term DIV term .)
    RPAREN          reduce using rule 2 (expression -> term DIV term .)


state 39

    (3) expression -> term ADD term .

    $end            reduce using rule 3 (expression -> term ADD term .)
    RPAREN          reduce using rule 3 (expression -> term ADD term .)


state 40

    (4) expression -> term SUB term .

    $end            reduce using rule 4 (expression -> term SUB term .)
    RPAREN          reduce using rule 4 (expression -> term SUB term .)


state 41

    (5) expression -> term OR term .

    $end            reduce using rule 5 (expression -> term OR term .)
    RPAREN          reduce using rule 5 (expression -> term OR term .)


state 42

    (6) expression -> term AND term .

    $end            reduce using rule 6 (expression -> term AND term .)
    RPAREN          reduce using rule 6 (expression -> term AND term .)


state 43

    (7) expression -> term BOR term .

    $end            reduce using rule 7 (expression -> term BOR term .)
    RPAREN          reduce using rule 7 (expression -> term BOR term .)


state 44

    (8) expression -> term BAND term .

    $end            reduce using rule 8 (expression -> term BAND term .)
    RPAREN          reduce using rule 8 (expression -> term BAND term .)


state 45

    (10) term -> factor MUL factor .

    MUL             reduce using rule 10 (term -> factor MUL factor .)
    DIV             reduce using rule 10 (term -> factor MUL factor .)
    ADD             reduce using rule 10 (term -> factor MUL factor .)
    SUB             reduce using rule 10 (term -> factor MUL factor .)
    OR              reduce using rule 10 (term -> factor MUL factor .)
    AND             reduce using rule 10 (term -> factor MUL factor .)
    BOR             reduce using rule 10 (term -> factor MUL factor .)
    BAND            reduce using rule 10 (term -> factor MUL factor .)
    $end            reduce using rule 10 (term -> factor MUL factor .)
    RPAREN          reduce using rule 10 (term -> factor MUL factor .)


state 46

    (11) term -> factor DIV factor .

    MUL             reduce using rule 11 (term -> factor DIV factor .)
    DIV             reduce using rule 11 (term -> factor DIV factor .)
    ADD             reduce using rule 11 (term -> factor DIV factor .)
    SUB             reduce using rule 11 (term -> factor DIV factor .)
    OR              reduce using rule 11 (term -> factor DIV factor .)
    AND             reduce using rule 11 (term -> factor DIV factor .)
    BOR             reduce using rule 11 (term -> factor DIV factor .)
    BAND            reduce using rule 11 (term -> factor DIV factor .)
    $end            reduce using rule 11 (term -> factor DIV factor .)
    RPAREN          reduce using rule 11 (term -> factor DIV factor .)


state 47

    (12) term -> factor ADD factor .

    MUL             reduce using rule 12 (term -> factor ADD factor .)
    DIV             reduce using rule 12 (term -> factor ADD factor .)
    ADD             reduce using rule 12 (term -> factor ADD factor .)
    SUB             reduce using rule 12 (term -> factor ADD factor .)
    OR              reduce using rule 12 (term -> factor ADD factor .)
    AND             reduce using rule 12 (term -> factor ADD factor .)
    BOR             reduce using rule 12 (term -> factor ADD factor .)
    BAND            reduce using rule 12 (term -> factor ADD factor .)
    $end            reduce using rule 12 (term -> factor ADD factor .)
    RPAREN          reduce using rule 12 (term -> factor ADD factor .)


state 48

    (13) term -> factor SUB factor .

    MUL             reduce using rule 13 (term -> factor SUB factor .)
    DIV             reduce using rule 13 (term -> factor SUB factor .)
    ADD             reduce using rule 13 (term -> factor SUB factor .)
    SUB             reduce using rule 13 (term -> factor SUB factor .)
    OR              reduce using rule 13 (term -> factor SUB factor .)
    AND             reduce using rule 13 (term -> factor SUB factor .)
    BOR             reduce using rule 13 (term -> factor SUB factor .)
    BAND            reduce using rule 13 (term -> factor SUB factor .)
    $end            reduce using rule 13 (term -> factor SUB factor .)
    RPAREN          reduce using rule 13 (term -> factor SUB factor .)


state 49

    (14) term -> factor OR factor .

    MUL             reduce using rule 14 (term -> factor OR factor .)
    DIV             reduce using rule 14 (term -> factor OR factor .)
    ADD             reduce using rule 14 (term -> factor OR factor .)
    SUB             reduce using rule 14 (term -> factor OR factor .)
    OR              reduce using rule 14 (term -> factor OR factor .)
    AND             reduce using rule 14 (term -> factor OR factor .)
    BOR             reduce using rule 14 (term -> factor OR factor .)
    BAND            reduce using rule 14 (term -> factor OR factor .)
    $end            reduce using rule 14 (term -> factor OR factor .)
    RPAREN          reduce using rule 14 (term -> factor OR factor .)


state 50

    (15) term -> factor AND factor .

    MUL             reduce using rule 15 (term -> factor AND factor .)
    DIV             reduce using rule 15 (term -> factor AND factor .)
    ADD             reduce using rule 15 (term -> factor AND factor .)
    SUB             reduce using rule 15 (term -> factor AND factor .)
    OR              reduce using rule 15 (term -> factor AND factor .)
    AND             reduce using rule 15 (term -> factor AND factor .)
    BOR             reduce using rule 15 (term -> factor AND factor .)
    BAND            reduce using rule 15 (term -> factor AND factor .)
    $end            reduce using rule 15 (term -> factor AND factor .)
    RPAREN          reduce using rule 15 (term -> factor AND factor .)


state 51

    (16) term -> factor BOR factor .

    MUL             reduce using rule 16 (term -> factor BOR factor .)
    DIV             reduce using rule 16 (term -> factor BOR factor .)
    ADD             reduce using rule 16 (term -> factor BOR factor .)
    SUB             reduce using rule 16 (term -> factor BOR factor .)
    OR              reduce using rule 16 (term -> factor BOR factor .)
    AND             reduce using rule 16 (term -> factor BOR factor .)
    BOR             reduce using rule 16 (term -> factor BOR factor .)
    BAND            reduce using rule 16 (term -> factor BOR factor .)
    $end            reduce using rule 16 (term -> factor BOR factor .)
    RPAREN          reduce using rule 16 (term -> factor BOR factor .)


state 52

    (17) term -> factor BAND factor .

    MUL             reduce using rule 17 (term -> factor BAND factor .)
    DIV             reduce using rule 17 (term -> factor BAND factor .)
    ADD             reduce using rule 17 (term -> factor BAND factor .)
    SUB             reduce using rule 17 (term -> factor BAND factor .)
    OR              reduce using rule 17 (term -> factor BAND factor .)
    AND             reduce using rule 17 (term -> factor BAND factor .)
    BOR             reduce using rule 17 (term -> factor BAND factor .)
    BAND            reduce using rule 17 (term -> factor BAND factor .)
    $end            reduce using rule 17 (term -> factor BAND factor .)
    RPAREN          reduce using rule 17 (term -> factor BAND factor .)


state 53

    (21) factor -> LPAREN expression RPAREN .

    MUL             reduce using rule 21 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 21 (factor -> LPAREN expression RPAREN .)
    ADD             reduce using rule 21 (factor -> LPAREN expression RPAREN .)
    SUB             reduce using rule 21 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 21 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 21 (factor -> LPAREN expression RPAREN .)
    BOR             reduce using rule 21 (factor -> LPAREN expression RPAREN .)
    BAND            reduce using rule 21 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 21 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 21 (factor -> LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MUL in state 3 resolved as shift
WARNING: shift/reduce conflict for DIV in state 3 resolved as shift
WARNING: shift/reduce conflict for ADD in state 3 resolved as shift
WARNING: shift/reduce conflict for SUB in state 3 resolved as shift
WARNING: shift/reduce conflict for OR in state 3 resolved as shift
WARNING: shift/reduce conflict for AND in state 3 resolved as shift
WARNING: shift/reduce conflict for BOR in state 3 resolved as shift
WARNING: shift/reduce conflict for BAND in state 3 resolved as shift
